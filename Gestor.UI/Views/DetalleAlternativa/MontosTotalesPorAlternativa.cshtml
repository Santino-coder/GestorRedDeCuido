

@model Gestor.Models.MontosTotalesViewModel

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>Montos Totales por Alternativa</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Enlaces a los archivos de hojas de estilo personalizados -->
    <link rel="stylesheet" href="~/css/_Layout.css" asp-append-version="true" />
    <link href="~/css/style.css" rel="stylesheet" type="text/css" />
</head>
<body>
    <div id="TotalPorAlternativa" class="card mb-4 contenedor-div" style="text-align:center;">
        <div class="card-body">
            <h4>Montos totales por alternativa</h4>
            <hr />

            @using (Html.BeginForm("MontosTotalesPorAlternativa", "DetalleAlternativa", new { area = "" }, FormMethod.Get))
            {
                <!-- Selector para elegir una alternativa -->
                <h3 class="h6"><label for="AlternativaSeleccionada">Selecciona una alternativa</label></h3>

                <select style="width:50%;" name="AlternativaSeleccionada" id="AlternativaSeleccionada">
                    <option value="Alimentación">Alimentación</option>
                    <option value="Artículos de uso personal e higiene">Artículos de uso personal e higiene</option>
                    <option value="Medicamentos e implementos de salud">Medicamentos e implementos de salud </option>
                    <option value="Atención social en salud integral">Atención social en salud integral</option>
                    <option value=" Productos de apoyo o ayudas técnicas">Productos de apoyo o ayudas técnicas</option>
                    <option value="Equipamiento de casa"> Equipamiento de casa</option>
                    <option value="Alquiler de vivienda, servicios básicos, municipales y trámites migratorios"> Alquiler de vivienda, servicios básicos, municipales y trámites migratorios</option>
                    <option value="Familias Solidarias">Familias Solidarias</option>
                    <option value="Servicios Básicos de atención en el domicilio y Servicios para la atención y cuidado especializado">Servicios Básicos de atención en el domicilio y Servicios para la atención y cuidado especializado</option>
                    <option value="Hogares comunitarios">Hogares comunitarios</option>
                    <option value="Transporte y combustible">Transporte y combustible</option>
                    <option value="Promoción y prevención de la salud">Promoción y prevención de la salud </option>
                    <option value="Institucionalización"> Institucionalización</option>
                    <option value="Mejoras habitacionales">Mejoras habitacionales</option>
                </select>

                <button type="submit" class="btn btn-primary btn-sm btn-icon-text">Calcular Monto</button>
            }

            @if (!string.IsNullOrEmpty(Model.AlternativaSeleccionada))
            {
                <hr />
                <!-- Muestra el monto total de la alternativa seleccionada -->
                <h3 class="h6">Alternativa seleccionada: @Model.AlternativaSeleccionada</h3>
                <p>Total: @Model.MontoMensualPorAlternativa.ToString("C")</p>
                <hr />

                <h3 class="h6">Montos por mes</h3>
                <table class="table table-hover table-bordered results">
                    <thead>
                        <tr>
                            <th>Mes</th>
                            <th>Monto</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.MontoMensualDeAlternativa != null && Model.MontoMensualDeAlternativa.Any())
                        {
                            @foreach (var item in Model.MontoMensualDeAlternativa)
                            {
                                <!-- Filas para mostrar montos por mes de la alternativa -->
                                <tr>
                                    <td>@item.Mesanio</td>
                                    <td>@item.MontoTotalMes.ToString("C")</td>
                                </tr>
                            }
                        }
                        else
                        {
                            <p>No hay datos disponibles para mostrar.</p>
                        }
                    </tbody>
                </table>
            }
            <!-- Enlace para regresar a la vista de montos totales -->
            @Html.ActionLink("Regresar a montos totales", "MontosTotales", "DetalleAlternativa", new { @class = "btn btn-danger btn-sm" })
        </div>
    </div>
</body>


<script>
    document.addEventListener("DOMContentLoaded", function () {
        ordenarTabla(0); // Llama a la función para ordenar por la primera columna al cargar la página
    });

    function obtenerAnioYMes(fecha) {
        // Obtén el año y el mes a partir de una fecha (suponiendo que el formato es "YYYY-MM")
        var partes = fecha.split("-");
        return {
            anio: parseInt(partes[0], 10),
            mes: parseInt(partes[1], 10)
        };
    }

    function compararFechas(fecha1, fecha2) {
        var fechaA = obtenerAnioYMes(fecha1);
        var fechaB = obtenerAnioYMes(fecha2);

        if (fechaA.anio === fechaB.anio) {
            return fechaA.mes - fechaB.mes;
        } else {
            return fechaA.anio - fechaB.anio;
        }
    }

    function ordenarTabla(columna) {
        var table, rows, switching, i, shouldSwitch;
        table = document.querySelector("#TotalPorAlternativa table");
        switching = true;

        while (switching) {
            switching = false;
            rows = table.rows;

            for (i = 1; i < rows.length - 1; i++) {
                shouldSwitch = false;

                // Comparar fechas en lugar de números
                var fecha1 = rows[i].cells[columna].innerHTML;
                var fecha2 = rows[i + 1].cells[columna].innerHTML;

                if (compararFechas(fecha1, fecha2) > 0) {
                    shouldSwitch = true;
                    break;
                }
            }

            if (shouldSwitch) {
                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                switching = true;
            }
        }
    }
</script>

</html>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
