@model Gestor.Models.MontosTotalesViewModel

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>CantidadTotalBeneficiaruos</title>
    <meta name="viewport" content="width-device-width, initial-scale=1">
    <!-- Enlace al archivo CSS de Bootstrap -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Enlaces a los archivos de hojas de estilo personalizados -->
    <link rel="stylesheet" href="~/css/_Layout.css" asp-append-version="true" />
    <link href="~/css/style.css" rel="stylesheet" type="text/css" />
</head>
<body>
    <div id="TotalPorMes" class="card mb-4 contenedor-div" style="text-align:center;">
        <div class="card-body">
            <h4>Montos totales por mes</h4>
            <hr />

            @if (Model.MontoPorMes != null && Model.MontoPorMes.Any())
            {
                <!-- Tabla para mostrar montos totales por mes -->
                <table class="table table-hover table-bordered results">
                    <thead>
                        <tr>
                            <th scope="col">Fecha</th>
                            <th scope="col">Monto</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.MontoPorMes)
                        {
                            <!-- Fila de la tabla para cada mes con su monto total -->
                            <tr>
                                <td>@item.Mesanio</td>
                                <td>@item.MontoTotalMes.ToString("C")</td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            <!-- Enlace para regresar a la vista de montos totales -->
            @Html.ActionLink("Regresar a montos totales", "MontosTotales","DetalleAlternativa", new { @class = "btn btn-danger btn-sm" })
        </div>
    </div>
</body>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        ordenarTabla(0); // Llama a la función para ordenar por la primera columna al cargar la página
    });

    function obtenerAnioYMes(fecha) {
        // Obtén el año y el mes a partir de una fecha (suponiendo que el formato es "YYYY-MM")
        var partes = fecha.split("-");
        return {
            anio: parseInt(partes[0], 10),
            mes: parseInt(partes[1], 10)
        };
    }

    function compararFechas(fecha1, fecha2) {
        var fechaA = obtenerAnioYMes(fecha1);
        var fechaB = obtenerAnioYMes(fecha2);

        if (fechaA.anio === fechaB.anio) {
            return fechaA.mes - fechaB.mes;
        } else {
            return fechaA.anio - fechaB.anio;
        }
    }

    function ordenarTabla(columna) {
        var table, rows, switching, i, shouldSwitch;
        table = document.querySelector("#TotalPorMes table");
        switching = true;

        while (switching) {
            switching = false;
            rows = table.rows;

            for (i = 1; i < rows.length - 1; i++) {
                shouldSwitch = false;

                // Comparar fechas en lugar de números
                var fecha1 = rows[i].cells[columna].innerHTML;
                var fecha2 = rows[i + 1].cells[columna].innerHTML;

                if (compararFechas(fecha1, fecha2) > 0) {
                    shouldSwitch = true;
                    break;
                }
            }

            if (shouldSwitch) {
                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                switching = true;
            }
        }
    }
</script>



</html>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}