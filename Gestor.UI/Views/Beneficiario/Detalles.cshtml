@model Gestor.Models.Beneficiario

@{
    ViewData["Title"] = "Detalles";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>Detalles de beneficiario</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- Inclusión de la biblioteca jspdf para generar PDFs -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.3.4/jspdf.debug.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Estilos CSS -->
    <link rel="stylesheet" href="~/css/_Layout.css" asp-append-version="true" />
    <link href="~/css/style.css" rel="stylesheet" type="text/css" />
</head>
<body>
    <div class="card mb-4">
        <div class="card-body">
            <h4 style="text-align:center;">Detalles de beneficiario</h4>
            <hr />
            <div id="html2pdf">
                <!-- Encabezado de la sección de detalles -->
                <h3 class="h6">Detalles de @Html.DisplayFor(model => model.Nombre)</h3>
                <hr />
                <dl class="row">
                    <!-- Pares de etiquetas y valores para mostrar detalles del beneficiario -->
                    <dt class="col-sm-2">
                        <th scope="col">Identificación</th>
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.DNI)
                    </dd>
                    <dt class="col-sm-2">
                        <th scope="col">Nombre</th>
                    </dt>
                    <dd class="col-sm-10">
                        @Html.DisplayFor(model => model.Nombre)
                    </dd>
                    <!-- Agregar más pares de etiquetas y valores para otros detalles -->
                    <!-- ... -->
                    <dt class="col-sm-2">
                        <th scope="col">Observaciones</th>
                    </dt>
                    <dd class="col-sm-10">
                        <!-- Muestra observaciones y reemplaza saltos de línea con etiquetas <br> -->
                        @Html.Raw(Model.Observaciones.Replace(Environment.NewLine, "<br />"))
                    </dd>
                    <dt class="col-sm-2">
                        <th scope="col">Alternativas</th>
                    </dt>
                    <dd class="col-sm-10">
                        <!-- Muestra múltiples alternativas -->
                        @Html.DisplayFor(model => model.Alternativa1)
                        <br />
                        @Html.DisplayFor(model => model.Alternativa2)
                        <br />
                        <!-- Agregar más alternativas según sea necesario -->
                    </dd>
                </dl>
            </div>
            <div class="d-grid gap-2 d-md-flex justify-content-md-begin">
                <!-- Botones y enlaces para realizar acciones relacionadas con el beneficiario -->
                @Html.ActionLink("Editar", "EditarBeneficiario", new { id = Model.idBeneficiario }, new { @class = "btn btn-primary btn-sm" })
                <form asp-controller="DetalleAlternativa" asp-action="ObtenerDetallePorIdBeneficiario" method="get">
                    <!-- Formulario para ver detalles de alternativas -->
                    @Html.HiddenFor(model => model.idBeneficiario) <!-- Campo oculto para almacenar el idBeneficiario -->
                    <input type="submit" value="Ver detalles de alternativas" class="btn btn-primary btn-sm" />
                </form>
                <form asp-controller="DetalleAlternativa" asp-action="AgregarDetalleAlternativa" asp-route-id="@Model.idBeneficiario" method="get">
                    <!-- Formulario para agregar detalles de alternativas -->
                    @Html.HiddenFor(model => model.idBeneficiario) <!-- Campo oculto para almacenar el idBeneficiario -->
                    <input type="submit" value="Agregar detalles de alternativas" class="btn btn-primary btn-sm" />
                </form>
                @Html.ActionLink("Lista de beneficiarios", "ListarBeneficiario", new { id = Model.idBeneficiario }, new { @class = "btn btn-danger btn-sm" })
                <!-- Enlace para descargar un PDF al hacer clic en el botón -->
                <a href="javascript:generatePDF()" class="btn btn-danger btn-sm">Descargar PDF</a>
            </div>
        </div>
    </div>
</body>
<!-- Inclusión del script para generar PDF -->
<script src="~/js/PDF.js"></script>
</html>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
